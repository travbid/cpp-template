name: configure-project
description: "Configure the project with CMake"

inputs:
  build_dir:
    default: 'build'
    description: 'Name of the build directory'
  build_type:
    default: 'RelWithDebInfo'
  c_compiler:
    default: 'clang'
  cpp_compiler:
    default: 'clang++'
  extra_cmake_options:
    default: ''
  extra_conan_options:
    default: ''

runs:
  using: "composite"
  steps:
    - run: >
        sudo apt-get install -y
        ninja-build
      shell: bash
    - run: python3 -m pip install --upgrade conan toml-cli
      shell: bash
    - run: conan profile detect --name default --force
      shell: bash
    - run: echo compiler.libcxx=libstdc++11 >> $(conan profile path default)
      shell: bash
    - run: >
        echo compiler=clang >> $(conan profile path default) &&
        echo [buildenv] >> $(conan profile path default) &&
        echo CC=clang >> $(conan profile path default) &&
        echo CXX=clang++ >> $(conan profile path default) 
      if: ${{inputs.cpp_compiler}} == 'clang++'
      shell: bash
    - run: conan profile show
      shell: bash
    - run: mkdir ${{inputs.build_dir}}
      shell: bash
    - run: >
        conan install
        --settings:host build_type=${{inputs.build_type}}
        --settings:host compiler.cppstd=17
        ${{inputs.extra_conan_options}}
        --output-folder ${{inputs.build_dir}}
        --build=missing
        ./conanfile.txt
      shell: bash
    - run: tree .
      shell: bash
    - run: >
        cmake
        -GNinja
        -DCMAKE_BUILD_TYPE=${{inputs.build_type}}
        -DCMAKE_C_COMPILER=${{inputs.c_compiler}}
        -DCMAKE_CXX_COMPILER=${{inputs.cpp_compiler}}
        ${{inputs.extra_cmake_options}}
        -S . -B ${{inputs.build_dir}}
      shell: bash
